@model MyFund.Model.UserBacking

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>UserBacking</h4>
<hr />
<div class="row">
    <div class="col-md-5">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <span asp-validation-for="BackingId" class="text-danger"></span>
            @for (var i = 0; i < Model.Backing.Project.BackingPackages.Count; i++)
            {
                <div class="form-group">
                    @{
                        var backingProject = Model.Backing.Project.BackingPackages.ToList()[i];
                        await Html.RenderPartialAsync("/Views/BackingPackages/_DetailsPartial.cshtml", backingProject);
                        Html.RadioButtonFor(bp => bp.Backing.Project.BackingPackages, backingProject.Id);
                    }
                    <input type="radio" asp-for="BackingId" value="@backingProject.Id" class="form-control" />
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Back this project" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Projects" asp-action="Details" asp-route-id="@Model.Backing.Project.Id">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
